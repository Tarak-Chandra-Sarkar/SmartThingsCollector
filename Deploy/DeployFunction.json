{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "KeyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure Keyvault to retrieve secrets from"
            }
        },
        "StorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the storage account to store and  retrieve event data from"
            }
        },
        "ContainerName": {
            "type": "string",
            "metadata": {
                "description": "Name of the container in the storage account to store and retrieve event data from"
            },
            "defaultValue": "eventcapture"
        },
        "FunctionName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Azure Function to Create"
            }
        },
        "FunctionIntervalInMinutes": {
            "type": "string",
            "metadata": {
                "description": "How often to execute the function"
            },
            "defaultValue": "15"
        },
        "CosmosDBAccount": {
            "type": "string",
            "metadata": {
                "description": "Name of Cosmos DB Account to store data in"
            }
        },
        "CosmosDBCollection": {
            "type": "string",
            "metadata": {
                "description": "Name of Cosmos DB Collection to store data in"
            }
        },
        "CosmosDBResourceGroup": {
           "type": "string",
           "metadata": {
                "description": "Resource Group that contains your Cosmos DB instance"
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat(parameters('StorageAccountName'),take(uniqueString(resourceGroup().id),5))]",
        "keyvaultName": "[concat(parameters('KeyVaultName'),take(uniqueString(resourceGroup().id),5))]",
        "functionName": "[concat(parameters('FunctionName'),take(uniqueString(resourceGroup().id),5))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
        "CosmosResourceId": "[resourceId(parameters('CosmosDBResourceGroup'),'Microsoft.DocumentDB/databaseAccounts', parameters('CosmosDBAccount'))]",
        "CosmosApiVersion": "[providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]]"

    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-02-01",
            "name": "[variables('StorageAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('StorageAccountName')]"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {},
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-03-01-preview",
                    "name": "[concat('default/', parameters('ContainerName'))]",
                    "dependsOn": [
                        "[variables('StorageAccountName')]"
                    ]
                },
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-03-01-preview",
                    "name": "[concat('default/', 'functionfiles')]",
                    "dependsOn": [
                        "[variables('StorageAccountName')]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2017-10-01-preview",
            "name": "[concat(variables('StorageAccountName'),'-aci')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "[concat(variables('StorageAccountName'),'-aci')]",
                        "properties": {
                            "command":["[concat('azcopy /Source:https://scartifactstorage.blob.core.windows.net/smartthingscollector /Dest:https://',variables('storageAccountName'),'.blob.core.windows.net/functionfiles /DestKey:',listKeys(variables('storageAccountid'),'2015-05-01-preview').key1,' /Pattern:SmartThingsCollector.zip')]"],
                            "image": "samcogan/azcopy",
                
                            "resources": {
                                "requests": {
                                    "cpu": 1,
                                    "memoryInGB": 0.5
                                }
                            }
                        }
                    }
                ],
                "osType": "Linux"
                
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "name": "[concat(variables('FunctionName'),'-plan')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[concat(variables('FunctionName'),'-plan')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('FunctionName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', concat(variables('FunctionName'),'-plan'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(variables('FunctionName'),'-plan'))]",
                "siteConfig": {
                    "connectionStrings": [
                        {
                          "name": "CosmosDBConnection",
                          "connectionString": "[concat('AccountEndpoint=https://', parameters('CosmosDBAccount'), '.documents.azure.com:443/;AccountKey=', listKeys(variables('CosmosResourceId'), variables('CosmosApiVersion')).primaryMasterKey, ';')]"
                        }
                    ],
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('FunctionName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "KeyvaultName",
                            "value": "[variables('KeyVaultName')]"
                        },
                        {
                            "name": "StorageAccountName",
                            "value": "[variables('storageAccountName')]"
                        },
                        {
                            "name": "StorageContainerName",
                            "value": "[parameters('ContainerName')]"
                        },
                        {
                            "name": "TimerInterval",
                            "value": "[concat('0 */',parameters('FunctionIntervalInMinutes') , ' * * * *')]"
                        },
                        {
                            "name": "ComsosDatabase",
                            "value": "[parameters('CosmosDBAccount')]"
                        },
                        {
                            "name": "CosmosCollection",
                            "value": "[parameters('CosmosDBCollection')]"
                        },
                        {
                            "name": "StorageAccountKeySecretName",
                            "value": "StorageAccountKeySecret"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2015-06-01",
            "name": "[variables('KeyVaultName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('KeyVaultName')]"
            },
            "properties": {
                "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('FunctionName')), '2015-08-01', 'Full').identity.tenantId]",
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "accessPolicies": [
                    {
                        "objectId": "[reference(concat('Microsoft.Web/sites/', variables('FunctionName')), '2015-08-01', 'Full').identity.principalId]",
                        "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('FunctionName')), '2015-08-01', 'Full').identity.tenantId]",
                        "permissions": {
                            "secrets": [
                                "list",
                                "get"
                            ]
                        }
                    }
                ],
                "sku": {
                    "name": "standard",
                    "family": "A"
                }
            },
            "resources": []
        },
        {
            "apiVersion": "2015-06-01",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyvaultName'), '/', 'StorageAccountKeySecret')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', concat(variables('keyvaultName')))]"

            ],
            "properties": {
                "value": "[listKeys(variables('storageAccountid'),'2015-05-01-preview').key1]"
            }
        }
    ],
    "outputs": {}
}